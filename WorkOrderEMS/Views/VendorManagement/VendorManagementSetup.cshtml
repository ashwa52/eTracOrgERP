@model WorkOrderEMS.Models.VendorSetupManagementModel

@{
    //    bool validEmail = Regex.IsMatch(Email, @"^(?("")("".+?(?<!\\)""@)|(([0-9a-z]((\.(?!\.))|[-!#\$%&'\*\+/=\?\^`\{\}\|~\w])*)(?<=[0-9a-z])@))" + @"(?(\[)(\[(\d{1,3}\.){3}\d{1,3}\])|(([0-9a-z][-\w]*[0-9a-z]*\.)+[a-z0-9][\-a-z0-9]{0,22}[a-z0-9]))$", RegexOptions.IgnoreCase);

    ViewBag.Title = "Vendor Management";
    //Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
    long locationId = 0;
    long userType = 0;
    string StateID = string.Empty, LocationTypeID = string.Empty;
    string ServiceId = string.Empty;
    string LocationIdData = string.Empty;
    if (ViewBag.UpdateMode != null && ViewBag.UpdateMode == true)
    {
        ViewBag.Title = "Update Vendor"; LocationIdData = ViewBag.AllocatedLocation; //ServiceId = ViewBag.ServicesID;
                                                                                     //LocationIdData = ViewBag.AllocatedLocation;
    }
    string hostingPrefix = System.Configuration.ConfigurationManager.AppSettings["hostingPrefix"];
    string CompanyDocPath = System.Configuration.ConfigurationManager.AppSettings["CompanyDocuments"];
    string url = Url.Action("CompanyList", "VendorManagement");
}
@section scripts{
    <script type="text/javascript">
        var $_locationId = '@locationId';
        var $_userTypeId = '@userType';
        var IsUpdate = '@ViewBag.UpdateMode';
        var e_mail = '@ViewBag.Email';
        //var $_LocationIdData = @ViewBag.AllocatedLocation;
        var ServiceID;
        var LocationIDs;

    </script>
}

<style>
    .form-control {
        border: 1px solid #a0b3b0 !important;
    }

    label .req {
        margin: 2px;
        color: #ed2f35;
    }

    .form-control:hover, .form-control:focus, .form-control.active {
        box-shadow: none;
        background: #fff;
        color: #454545;
    }

    .stepwizard {
        display: table;
        width: 100% !important;
        position: relative;
        margin-left: 0% !important;
    }

    .headerSize {
        height: 36px;
    }

    .error {
        color: red;
    }

    .stepwizard-step p {
        margin-top: 0px;
        color: #666;
        font-size: 20px;
        margin-left: -35px;
    }

    .stepwizard-row {
        display: table-row;
    }



    .stepwizard-step button[disabled] {
        /*opacity: 1 !important;
    filter: alpha(opacity=100) !important;*/
    }

    .stepwizard .btn.disabled, .stepwizard .btn[disabled], .stepwizard fieldset[disabled] .btn {
        opacity: 1 !important;
        color: #bbb;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px; 
        background-color: #ccc;
        z-index: 0;
    }

    .stepwizard-step {
        display: table-cell;
        /*text-align: center;*/
        position: relative;
    }

    .btn-circledata {
        width: 30px;
        height: 30px;
        text-align: center;
        padding: 6px 0;
        font-size: 12px;
        line-height: 1.428571429;
        border-radius: 15px;
    }

    .stepwizard-step {width:20%; text-align:center; font-size:14px;}
    .stepwizard-step p{font-size:14px; margin-left:0; text-align:center;}

    .multiselect-container .checkbox input{margin-right:8px;}
    .multiselect-container label.checkbox{margin: 6px 0 0!important;
    padding: 0 0 0 30px; 
    width: 100%;}
    .multiselect-container input{float:left; margin-rop:7px!important;}
    input[type="checkbox"]:after {
    background:#0aa0cd;}
    .radio_span{float:left;}

</style>

<link href="~/Content/eCounting/VendorWizard.css" rel="stylesheet" />
@*<link href="~/Content/eFleetVehicle/eFleetstyle.css" rel="stylesheet" />*@
@*<link href="~/Content/eFleetVehicle/VendorRegistrationCSS.css" rel="stylesheet" />*@
@*<script src="~/Scripts/simple.money.format.js"></script>


    <script src="~/Scripts/eFleetVehicle/reg.js"></script>*@
<script type="text/javascript" src="~/Scripts/common/Common.js"></script>
<script type="text/javascript" src="~/Scripts/BindDropDown/DropDownList.js"></script>

<script src="~/Scripts/simple.money.format.js"></script>
 

<script type="text/javascript" src="~/Scripts/common/Masking.js"></script>
<style>
    .input-disabled {
        background-color: #EBEBE4;
    }
</style>

<br />
<div class="content-body">
    <div class="container-fluid">
        <!-- row -->
        <div class="row">
            <div class="col-xl-12 col-xxl-12">
                <div class="card aos-init aos-animate" data-aos="fade-up">
                    <div class="card-header headerSize">
                        <h4 class="card-title" style="color:white;"><strong>SetUp Vendor</strong></h4>
                    </div>
                    <div class="card-body">


                        @using (Html.BeginForm("VendorManagementSetup", "VendorManagement", FormMethod.Post, new { enctype = "multipart/form-data", @id = "msform", @class = "step-form-horizontal", @style = "" }))
                        {

                            @Html.ValidationSummary(true)
                            @Html.AntiForgeryToken()
                            <!-- progressbar -->
                            if (ViewBag.UpdateMode == false)
                            {
                                <div class="stepwizard">
                                    <div class="stepwizard-row setup-panel" id="progressbar">
                                        @*if (ViewBag.UpdateMode == false)
                        {*@
                                        <div class="stepwizard-step col-xs-2">
                                            <a href="#step-1" type="button" class="btn btn-circledata btn-default btn-success active">1</a>
                                            <p><small>Vendor Details to setup Company</small></p>
                                            @*<li class="active" style="width: 20%;"><span>Vendor<p>Details to setup Company</p></span></li>*@
                                        </div>
                                        <div class="stepwizard-step col-xs-2">
                                            <a href="#step-2" type="button" class="btn btn-circledata btn-default btn-default ">2</a>
                                            <p><small>Insurance & License Information</small></p>
                                            @*<li class="active" style="width: 20%;"><span>Vendor<p>Details to setup Company</p></span></li>*@
                                        </div>
                                        <div class="stepwizard-step col-xs-2">
                                            <a href="#step-3" type="button" class="btn btn-circledata btn-default btn-default ">3</a>
                                            <p><small>Vendor Contract </small></p>
                                            @*<li class="active" style="width: 20%;"><span>Vendor<p>Details to setup Company</p></span></li>*@
                                        </div>
                                        <div class="stepwizard-step col-xs-2">
                                            <a href="#step-4" type="button" class="btn btn-circledata btn-default btn-default ">4</a>
                                            <p><small>Vendor Facility Information</small></p>
                                            @*<li class="active" style="width: 20%;"><span>Vendor<p>Details to setup Company</p></span></li>*@
                                        </div>
                                        <div class="stepwizard-step col-xs-2">
                                            <a href="#step-5" type="button" class="btn btn-circledata btn-default btn-default ">5</a>
                                            <p><small> Account Details</small></p>
                                            @*<li class="active" style="width: 20%;"><span>Vendor<p>Details to setup Company</p></span></li>*@
                                        </div>

                                    </div>
                                </div>
                            }
                            <!-- fieldsets -->
                            @Html.HiddenFor(model => model.StateAfterIsSame, new { @id = "StateAfterIsSame" })
                            @Html.HiddenFor(model => model.ProductList, new { @id = "ProductList" })

                            @Html.HiddenFor(model => model.VendorId, new { @id = "VendorId" })

                            @Html.HiddenFor(model => model.CompanyDocEdit, new { @id = "CompanyDocEdit" })
                            @Html.HiddenFor(model => model.CompanyId)
                            if (ViewBag.UpdateMode != false)
                            {
                                @Html.HiddenFor(model => model.VendorType, new { @id = "VendorTypeForEdit" })
                            }
                            <br />
                            <fieldset id="VendorSetUp">
                                @*<link href="~/Content/eFleetVehicle/VendorRegistrationCSS.css" rel="stylesheet" />*@
                                <div class="panel panel-primary setup-content">
                                    <div class="basic-form">

                                        <div class="form-group row">
                                            <label class="col-sm-2 col-form-label" for="LocationName">Select Vendor Type<span class="req">*</span></label>
                                            <div class="col-sm-4">
                                                @if (ViewBag.VendorType != null)
                                                {

                                                    @Html.DropDownListFor(model => model.VendorType, new SelectList(ViewBag.VendorType, "VendorTypeId", "VendorTypeName"), "--Select Vendor Type--", new { @id = "VendorType", @class = "form-control input-rounded" })
                                                }
                                                else
                                                {
                                                    <select id="Address2State"><option value="-1">@ViewBag.StateList</option></select>
                                                }
                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.VendorType)
                                                </div>
                                            </div>
                                            <label class="col-sm-2 col-form-label" for="VendorName">Vendor Name<span class="req">*</span></label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.CompanyNameLegal, new { @id = "CompanyName", @class = "form-control input-rounded" })


                                                @Html.ValidationMessageFor(model => model.CompanyNameLegal)

                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-2 col-form-label" for="LocationName">Vendor Name DBA</label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.CompanyNameDBA, new { @class = "form-control input-rounded" })

                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.CompanyNameDBA)
                                                </div>
                                            </div>
                                            <label class="col-sm-2 col-form-label" for="VendorName">  Point Of Contact<span class="req">*</span></label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.PointOfContact, new { @class = "form-control input-rounded" })
                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.PointOfContact)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-2 col-form-label" for="LocationName"> Job Tile<span class="req">*</span></label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.JobTile, new { @class = "form-control input-rounded" })

                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.JobTile)
                                                </div>
                                            </div>
                                            <label class="col-sm-2 col-form-label" for="VendorName"> Tax Id Number<span class="req">*</span></label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.TaxNo, new { @id = "TaxNo", @class = "form-control input-rounded" })

                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.TaxNo)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-2 col-form-label" for="LocationName">  Company Address<span class="req">*</span></label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.Address1, new { @id = "Address1", @class = "form-control input-rounded" })

                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.Address1)
                                                </div>
                                            </div>
                                            <label class="col-sm-2 col-form-label" for="VendorName"> City<span class="req">*</span></label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.Address1City, new { @id = "Address1City", @class = "form-control input-rounded" })

                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.Address1City)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-2 col-form-label" for="LocationName">State<span class="req">*</span></label>
                                            <div class="col-sm-4">
                                                @if (ViewBag.StateList != null)
                                                {
                                                    @Html.DropDownListFor(model => model.Address1State, new SelectList(ViewBag.StateList, "StateId", "StateName"), "--Select State--", new { @id = "Address1State", @class = "form-control input-rounded" })
                                                }
                                                else
                                                {
                                                    <select id="Address2State" class="form-control input-rounded"><option value="-1">@ViewBag.StateList</option></select>
                                                }
                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.Address1State)
                                                </div>
                                            </div>

                                        </div>
                                        <div class="form-group row">

                                            <div class="col-sm-4">
                                                @Html.CheckBoxFor(model => model.IsAddress2Same, new { @class = "SameAddress" })
                                                &nbsp;&nbsp;&nbsp; Is Shipping address is same as Company address
                                            </div>

                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-2 col-form-label" for="LocationName">   Shipping Address</label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.Address2, new { @id = "Address2", @class = "form-control input-rounded" })

                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.Address2)
                                                </div>
                                            </div>
                                            <label class="col-sm-2 col-form-label" for="VendorName" id="lblShipingCity"> City</label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.Address2City, new { @id = "Address2City", @class = "form-control input-rounded" })

                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.Address2City)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-2 col-form-label" for="LocationName">State</label>
                                            <div class="col-sm-4">
                                                @if (ViewBag.StateList != null)
                                                {
                                                    @Html.DropDownListFor(model => model.Address2State, new SelectList(ViewBag.StateList, "StateId", "StateName"), "--Select State--", new { @id = "Address2State", @class = "form-control input-rounded" })
                                                }
                                                else
                                                {
                                                    <select id="Address2State" , class="form-control input-rounded"><option value="-1">@ViewBag.StateList</option></select>
                                                }
                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.Address2State)
                                                </div>
                                            </div>
                                            <label class="col-sm-2 col-form-label" for="LocationName">Phone 1<span class="req">*</span></label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.Phone1, new { @maxLength = "10", @class = "form-control input-rounded" })
                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.Phone1)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">

                                            <label class="col-sm-2 col-form-label" for="VendorName">   Phone 2</label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.Phone2, new { @maxLength = "10", @class = "form-control input-rounded" })

                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.Phone2)
                                                </div>
                                            </div>
                                            <label class="col-sm-2 col-form-label" for="LocationName">E-mail<span class="req">*</span></label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.VendorEmail, new { @id = "Email", @class = "form-control input-rounded" })
                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.VendorEmail)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">

                                            <label class="col-sm-2 col-form-label" for="VendorName"> Website</label>
                                            <div class="col-sm-4">
                                                @Html.TextBoxFor(model => model.Website, new { pattern = "http://www.*", @class = "form-control input-rounded", @placeholder = "eg format : http://www.google.com/" })
                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.Website)
                                                </div>
                                            </div>
                                            <label class="col-sm-2 col-form-label" for="LocationName">Company Documents</label>

                                            <div class="col-sm-4">
                                                <div id="dvCompanyPreview">
                                                </div>
                                                <input id="fileuploadCompany" type="file" style="margin-left:50%;" name="CompanyDocumentsFile" />
                                                <ul class="attachment">
                                                    @if (Model.CompanyDocuments != null && Model.CompanyDocuments != "")
                                                    {
                                                        <li style="margin-left :25%;margin-top:20px;">
                                                            <a class="title" href="@Url.Content(Model.CompanyDocuments)">@ViewBag.CompanyDocEdit</a>
                                                        </li>
                                                    }
                                                </ul>
                                                <div class="errorspace">
                                                    @Html.ValidationMessageFor(model => model.CompanyDocuments)
                                                </div>
                                            </div>
                                        </div>


                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                @if (ViewBag.UpdateMode == false)
                                {
                                    //<input type="button" id="LocationNext" name="next" class="btn btn-default bluebutton next pull-right" style="border-radius:25px;width:90px;" value="Next" />

                                    <a href="javascript:void(0)" id="LocationNext" class="next fa fa-long-arrow-right previousBtndata pull-right" style="font-size: 33px;color:#0aa0cd; cursor: pointer;"></a>


                                    <!--<input type="button" onclick="location.href='@Url.Action("CompanyList", "VendorManagement")'" class="btn btn-default bluebutton nxt-btn" style="border-radius:25px;width:90px;" formnovalidate="formnovalidate" value="Cancel" />-->
                                }
                                else
                                {

                                    @*<input type="button" name="previous" class="btn btn-default bluebutton previous prv-last-btn pull-right marginright10 marginbottom10 LRmar" value="Previous" style="border-radius:25px;width:90px;" />*@
                                    <button type="submit" onclick="return validateCustomFields(this);" class="btn btn-success pull-right marginright10 marginbottom10 Lmar10" style="border-radius:25px;width:150px;">Save &amp; Update </button>
                                    <input type="button" onclick="location.href='@Url.Action("CompanyList", "VendorManagement")'" class="btn btn-default bluebutton pull-right marginright10 marginbottom10 Lmar10" formnovalidate="formnovalidate" value="Cancel" style="border-radius:25px;width:90px;" />
                                }
                            </fieldset>


                            @*<i class="fa fa-long-arrow-right nextBtndata pull-right" style="font-size: 33px;color:#0aa0cd;cursor: pointer;"></i>*@



                            <fieldset id="VendorInsurance">
                                @{ViewBag.myModelprefixName = "VendorInsuranceModel."; ViewBag.ActionSection = "VendorInsurance";}
                                <div id="divInsurance">
                                    @Html.Partial("VendorInsurance")
                                </div>

                                @*<input type="button" name="next" class="btn btn-default bluebutton next  nxt-btn" value="Next" />
                <input type="button" name="previous" class="btn btn-default bluebutton previous prv-btn mrgL5" value="Previous" />
                <input type="button" onclick="callCancel();" class="btn btn-default bluebutton nxt-btn" formnovalidate="formnovalidate" value="Cancel" />*@

                                <!-- <input type="button" name="next" class="btn btn-success next nxt-btn" value="Next" style="border-radius:25px;width:90px;" />&nbsp; &nbsp;-->
                                <a href="javascript:void(0)" id="" class="next fa fa-long-arrow-right previousBtndata pull-right" style="font-size: 33px;color:#0aa0cd; cursor: pointer;"></a>
                                <a href="javascript:void(0)" class="previous fa fa-long-arrow-left pull-left" style="font-size: 33px;color:#0aa0cd; cursor: pointer;"></a>

                                <!--<input type="button" name="previous" class="btn btn-default bluebutton previous prev_btn" value="Previous" style="border-radius:25px;width:90px;" />&nbsp; &nbsp;-->
                                <!--<input type="button" onclick="callCancel();" class="btn btn-default bluebutton nxt-btn" formnovalidate="formnovalidate" value="Cancel" style="border-radius:25px;width:90px;" />-->

                            </fieldset>

                            <fieldset id="VendorContractInformation">
                                @{ViewBag.myModelprefixName = "VendorContractModel."; ViewBag.ActionSection = "VendorContract";}
                                <div id="divVendorContract">
                                    @Html.Partial("_VendorContract")
                                </div>
                                <a href="javascript:void(0)" id="" class="next nxt-btn fa fa-long-arrow-right previousBtndata pull-right" style="font-size: 33px;color:#0aa0cd; cursor: pointer;"></a>
                                @*<input type="button" name="next" class="fa fa-long-arrow-right previousBtndata next  nxt-btn pull-right" value="Next" style="border-radius:25px;width:90px;" />*@
                                <a href="javascript:void(0)" class="previous fa fa-long-arrow-left pull-left prev_btn" style="font-size: 33px;color:#0aa0cd; cursor: pointer;"></a>
                                @*<input type="button" name="previous" class="btn btn-default bluebutton previous prev_btn" value="Previous" style="border-radius:25px;width:90px;" />*@
                                @*<input type="button" onclick="callCancel();" class="btn btn-default bluebutton nxt-btn" formnovalidate="formnovalidate" value="Cancel" style="border-radius:25px;width:90px;" />*@

                            </fieldset>
                            <fieldset id="VendorFacilityInformation">
                                @{ViewBag.myModelprefixName = "VendorFacilityModel."; ViewBag.ActionSection = "VendorFacility";}
                                <div id="divFacility">
                                    @Html.Partial("_VendorFacility")
                                </div>
                                <br /><br />
                                <a href="javascript:void(0)" id="" class="next nxt-btn fa fa-long-arrow-right previousBtndata pull-right" style="font-size: 33px;color:#0aa0cd; cursor: pointer;"></a>
                                <a href="javascript:void(0)" class="previous fa fa-long-arrow-left pull-left prev_btn" style="font-size: 33px;color:#0aa0cd; cursor: pointer;"></a>
                                @*<input type="button" name="next" class="fa fa-long-arrow-right previousBtndata next  nxt-btn pull-right" value="Next" style="border-radius:25px;width:90px;" />
                <input type="button" name="previous" class="btn btn-default bluebutton previous prev_btn" value="Previous" style="border-radius:25px;width:90px;" />*@
                                @*<input type="button" onclick="callCancel();" class="btn btn-default bluebutton nxt-btn" formnovalidate="formnovalidate" value="Cancel" style="border-radius:25px;width:90px;" />*@

                            </fieldset>

                            <fieldset id="VendorAccountDetails">
                                @{ViewBag.myModelprefixName = "VendorAccountDetailsModel."; ViewBag.ActionSection = "VendorAccountDetail";}
                                <div id="divFacility">
                                    @Html.Partial("_VendorAccountDetails")
                                </div>
                                <div class="clearfix"></div>
                                <!--<input type="button" name="previous" class="btn btn-default bluebutton previous prv-last-btn pull-right marginright10 marginbottom10 LRmar" value="Previous" style="border-radius:25px;width:90px;" />-->

                                <a href="javascript:void(0)" class="previous fa fa-long-arrow-left pull-left" style="font-size: 33px;color:#0aa0cd; cursor: pointer;"></a>
                                <button type="submit" id="Savebtndata" class="btn btn-success pull-right marginright10 marginbottom10 Lmar10" style="border-radius:25px;width:150px;">Save &amp; Update </button>
                                <input type="button" onclick="callCancel();" class="btn btn-default bluebutton pull-right marginright10 marginbottom10 Lmar10" formnovalidate="formnovalidate" value="Cancel" style="border-radius:25px;width:90px;" />

                            </fieldset>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/eCounting/VendorMultiStepWizard.js"></script>
<script src="~/Content/NewAdminContent/VENDOR/jquery-steps/build/jquery.steps.min.js"></script>

<script src="~/Scripts/NewAdminJS/plugins-init/jquery-steps-init.js"></script>


<script>
    $(function () {

        $("#drp_MasterLocation1").hide();

        $("#Savebtndata").on("click", function (event) {
            if (!$("#msform").valid()) {
                return false;
            }
            fn_showMaskloader('Please wait...Loading');
        });
        $("#lblVendorType").hide();
        $("#lblCompanyState").hide();
        $("#lblAddress2").hide();
        $(".SameAddress").change(function () {
            var AddrState1;
            var AddrCountry1;
            if (this.checked) {
                var Addr1 = $("#Address1").val();
                var AddrCity1 = $("#Address1City").val();
                $("#Address2").val(Addr1);
                $("#Address2City").val(AddrCity1);
                AddrState1 = $('#Address1State').find('option:selected').val();
                $('#StateAfterIsSame').val(AddrState1);
                $('#Address2State').val(AddrState1).trigger('change');
                $('#Address2,#Address2City').attr('readonly', true);
                $('#Address2State').attr('disabled', 'disabled');
                $('#Address2,#Address2City,#Address2State').css("background-color", "#EBEBE4");
                $('#Address2,#lblShippingAddress,#lblShipingCity,#lblAddress2').addClass('active highlight');
                $("#lblAddress2").show();
                }
            else {
                $('#Address2,#Address2City').val("");
                $('#Address2State').val('');
                $('#Address2,#Address2City,#Address2State').css("background-color", "white");
                $('#Address2,#Address2City,select #Address2State').attr('readonly', false);
                $('#Address2State').removeAttr('disabled');
                $('#Address2,#Address2City,#Address2State').removeClass('input-disabled');
            }
        });
        $("#VendorType").on("click", function () {
            $("#lblVendorType").addClass('active highlight');
            $("#lblVendorType").show();
            });
        $("#Address1State").on("click", function () {
            $("#lblCompanyState").addClass('active highlight');
            $("#lblCompanyState").show();
            });
        $("#Address2State").on("click", function () {
            $("#lblAddress2").addClass('active highlight');
            $("#lblAddress2").show();
        });
        $("#fileuploadCompany").change(function () {
            $("#dvCompanyPreview").html("");
            var allowedExtensions = /(\.pdf|\.doc|\.docx|\.txt)$/i;
            var size = this.files[0].size;
            if (!allowedExtensions.exec($(this).val().toLowerCase())) {
                alert("Invalid file type");
                $(this).val("");
                return false;
            }
            else if (size >= 4194304) {
                alert("Max file size 4 mb.");
                $(this).val("");
                return false;
            }
        })

    if (IsUpdate == "True")
    {

            $("#lblVendorType,#lblCompanyState").show();
            $('label').addClass('active highlight');
            $('#Address2,#Address2City,#Address2State,#TaxNo,#VendorType').css("background-color", "#EBEBE4");
            $('#Address2,#Address2City,#TaxNo').attr('readonly', true);
            
             $("#VendorType").val(@ViewBag.VendorTypeIdData);
            $('#Address2State,#VendorType').attr('disabled', 'disabled');
            $('#VendorId').val(@ViewBag.VendorId);
            $("#Email").val(e_mail);
            $('#lblDoc').css("margin-top", "19px");
            LocationIDs = '@LocationIdData';
            $('#SelectVendorToLocation').multiselect({
                maxHeight: '300',
                onChange: function (element, checked) {
                    var LocationId = $('#SelectVendorToLocation option:selected');
                    var Location = [];
                    $(LocationId).each(function (index, Services) {
                        var ll = $(LocationId).val();
                        if (ll != undefined && parseInt(ll) > 0) {
                            Location.push([$(this).val()]);
                        }
                    });
                    $("#LocationAllocateId").val(Location);
                }
            });
            var Arr = LocationIDs.split(',');
            for (var i = 0; i < Arr.length; i++) {
                $("#SelectVendorToLocation").multiselect("select", $.trim(Arr[i]));
            }
            $("#SelectVendorToLocation").multiselect('rebuild');
            var $_LocationIdData;
            var Id = $('#VendorId').val();
            var GetAllocatedList = 'VendorManagement/GetAllAllocatedLocation'
                $.ajax({
                    type: "POST",
                    url: $_HostPrefix + GetAllocatedList + "?vendorId=" + Id,
                    contentType: "application/json; charset=utf-8",
                    beforesend: function () {
                        new fn_showmaskloader('please wait...');
                    },
                    success: function (result) {
                        //var Arr = result.split(',');
                        for (var i = 0; i < result.length; i++) {
                            $("#SelectVendorToLocation").multiselect("select",$.trim(result[i].LocationId), $.trim(result[i].LocationName));
                        }
                        $("#SelectVendorToLocation").multiselect('rebuild');
                    },
                    error: function (xhr, status, error) {
                    },
                });


    }

    });
     function callCancel() {
            bootbox.confirm("Are you sure you want to cancel?", function (result) {
                if (result) {
                    var vars = [], hash;
                    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
                    for (var i = 0; i < hashes.length; i++) {
                        hash = hashes[i].split('=');
                        vars.push(hash[0]);
                        vars[hash[0]] = hash[1];
                    }
                    var Loc = decodeURIComponent(vars.loc);
                    if (Loc == undefined || Loc == null || Loc == "undefined") {
                        window.location.href = "/VendorManagement/VendorManagementSetup";
                    }
                    else {
                        window.location.href = "/VendorManagement/VendorManagementSetup";
                    }
                    //console.log(history.go(-1));
                }
            });
        }
</script>
