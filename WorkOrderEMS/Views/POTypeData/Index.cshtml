@model WorkOrderEMS.Models.POTypeDataModel
@{
    ViewBag.Title = "Create PO";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
    long locationId = 0;
    long userType = 0;
    string ServiceId = string.Empty;
    WorkOrderEMS.Models.eTracLoginModel ObjLogin = (WorkOrderEMS.Models.eTracLoginModel)Session["eTrac"];
    if (ObjLogin != null)
    {
        locationId = ObjLogin.LocationID;
        userType = ObjLogin.UserRoleId;
    }
    string EMD = System.Configuration.ConfigurationManager.AppSettings["EmergencyDocuments"];
}
@*<link href='https://fonts.googleapis.com/css?family=Titillium+Web:400,300,600' rel='stylesheet' type='text'>
<link href="~/Content/eFleetVehicle/eFleetstyle.css" rel="stylesheet" />*@
    <link href="~/Content/NewAdminContent/CSS/custom.css" rel="stylesheet" />
<style type="text/css">
   label .req {
        margin: 2px;
        color: #ed2f35;
    }
  

    input[type="radio"] {
        height: 20px;
        width: 20px;
        background-color: #4475b5;
        color: #4475b5;
    }

    .errorspace {
        margin-top: -5px
    }
  
</style>
 
@section scripts{
    <script type="text/javascript">
    var $_locationId = '@locationId';
    var $_userTypeId = '@userType';
        $_ServiceID = '@ServiceId';
        var $_Edit = '@ViewBag.UpdateMode'
        var $_VendorId = 0;
        var update = '@ViewBag.UpdateMode';

         $(function() {
             $('#AllocateToLocation').multiselect({
                 includeSelectAllOption: true,
                 onChange: function (element, checked) {
                             var Services = $('#AllocateToLocation option:selected');
                             var selected = [];
                             $(Services).each(function (index, Services) {

                                 var ss = $(Services).val();
                                 if (ss != undefined && parseInt(ss) > 0) {
                                     selected.push([$(this).val()]);
                                 }
                             });
                             $("#AllocateLocationID").val(selected);
                         }
        });
    });
    </script>
    @*<script type="text/javascript">
        $(window).bind('resize', function () {
            var width = $('#jqGrid_container').width();
            $('#tbl_CompanyFacilityDataList').setGridWidth(width);
        });
    </script>*@

}


<script src="~/Scripts/BootStrap-Multiselect/JS/jquery.multi-select.js"></script>


<div class="content-body">
    <div class="container-fluid">
        <!-- row -->
        <div class="row page-titles mx-0 aos-init aos-animate" data-aos="fade-up">
            <div class="col-sm-6 p-md-0">
                <div class="welcome-text">
                    <h4>Create PO</h4>
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="javascript:void(0)">PO</a></li>
                        <li class="breadcrumb-item active"><a href="javascript:void(0)">Create PO</a></li>
                    </ol>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xl-12 col-xxl-12">
                <div class="card aos-init aos-animate" data-aos="fade-up">
                    <div class="card-header headerSize">
                        <h4 class="card-title">Create PO</h4>
                    </div>
                    <div class="card-body">


                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", @id = "po_form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.POId)
                         

                            <div class="panel panel-primary setup-content">
                                <div class="basic-form">
                                    <div class="form-group row">
                                        <p id="IsReccuringAddedForVendor" style="display:none;color:red;"><b>Reccuring PO not fill for this vendor please select another vendor</b></p>

                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-12">
                                        @if (@ViewBag.UpdateMode == true)
                                        {
                                            <input type="text" value="@ViewBag.PONumberData" id="PONumber" name="PONumber" class="form-control input-rounded text-center" readonly />
                                        }
                                        else
                                        {
                                            <input type="text" value="@ViewBag.PONumber" id="PONumber" name="PONumber" class="form-control input-rounded text-center" readonly />
                                        }

                                    </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-md-6">
                                            <label class="col-form-label" id="">Select Location<span class="req">*</span></label>

                                            @if (Session != null)
                                            {
                                                if (Session["eTrac_UserLocations"] != null)
                                                {

                                                    @Html.DropDownList("Location", new SelectList((List<WorkOrderEMS.Models.UserLocations>)Session["eTrac_UserLocations"], "LocationId", "LocationName"), "--Select Locaion--", new { @id = "Location", @onchange = "getVendorList(false)", @class = "form-control input-rounded" })
                                                }
                                            }
                                            <div class="errorspace">
                                                @Html.ValidationMessageFor(model => model.Location)
                                            </div>

                                        </div>
                                        <div class="form-group col-md-6">
                                            <label class="col-form-label" for="VendorName">Select PO Type<span class="req">*</span></label>

                                            <select name="POType" id="POType" class="form-control input-rounded">
                                                <option value="0">--Select POType--</option>
                                                <option value="1">Normal PO</option>
                                                <option value="2">Reccuring PO</option>
                                                <option value="3">Emergency PO</option>
                                                <option value="4">Blanket PO</option>
                                            </select>
                                            <div class="errorspace">
                                                @Html.ValidationMessageFor(model => model.POType)
                                            </div>

                                        </div>

                                        <!--Div Emeregency-->
                                        <div class="form-group col-md-6 ShowRowForEmergency" style="display:none">
                                            <h6 class="col-form-label"> Is Vendor is registered ? <span class="req">*</span></h6>


                                            <span>
                                                <input type="radio" id='IsVendorRegisterYes' value="1" name="IsVendorRegister" class="IsVendorRegister" /><span class="radio_span"> Yes</span>
                                                <input type="radio" id='IsVendorRegisterNo' value="0" name="IsVendorRegister" class="IsVendorRegister" /><span class="radio_span"> No</span>
                                            </span>

                                        </div>
                                        <!--End Div Emeregency-->

                                        <div class="form-group col-md-6 WhenVenderRegister">
                                            <label class="col-form-label" id="">Company<span class="req">*</span></label>

                                            @if (@ViewBag.UpdateMode == true)
                                            {
                                                if (ViewBag.VendorList != null)
                                                {
                                                    @Html.DropDownListFor(model => model.SelectedVendor, new SelectList(ViewBag.VendorList, "CompanyId", "CompanyNameLegal"), "--Select Company--", new { @id = "SelectedVendor", @class = "VendorClass form-control input-rounded" })}
                                                else
                                                {
                                                    <select id="State" class="form-control input-rounded"><option value="-1">@ViewBag.POType</option></select>}
                                            }
                                            else // This is temorary need to use Razor
                                            {
                                                <select class="form-control input-rounded" name="@Html.NameFor(model => model.Vendor)"
                                                        id="@Html.IdFor(model => model.Vendor)">
                                                    <option>--Select Company--</option>
                                                </select>
                                            }
                                            <div class="errorspace">
                                                @Html.ValidationMessageFor(model => model.Vendor)
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6  WhenVenderRegister">
                                            <label class="col-form-label" id="lblPointOfContact"> Point of Contact<span class="req">*</span></label>

                                            @Html.TextBoxFor(model => model.PointOfContactName, new { @id = "PointOfContactName", @readonly = "readonly", @class = "form-control input-rounded" })
                                            <div class="errorspace">
                                                @Html.ValidationMessageFor(model => model.PointOfContactName)
                                            </div>
                                            @Html.HiddenFor(model => model.PointOfContactNameHidden, new { @id = "PointOfContactNameHidden" })

                                        </div>

                                        <div class="form-group col-md-6 ShowNormalPO">
                                            <label class="col-form-label" id="lblIssueDate">Issue Date<span class="req">*</span></label>

                                            @if (@ViewBag.UpdateMode == true)
                                            {
                                                @Html.TextBoxFor(model => model.IssueDate, "{0:MM/dd/yyyy}", new { @id = "IssueDateEdit", @onkeydown = "return false;", @style = "background-color:#EBEBE4;", @class = "form-control input-rounded" })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(model => model.IssueDate, "{0:MM/dd/yyyy}", new { @id = "IssueDate", @onkeydown = "return false;", @style = "background-color:#EBEBE4;", @class = "form-control input-rounded" })
                                            }

                                        </div>
                                        <div class="form-group col-md-6 ShowNormalPO">
                                            <label class="col-form-label" id="lblDeliveryDate"> Delivery Date<span class="req">*</span></label>

                                            @Html.TextBoxFor(model => model.DeliveryDate, "{0:MM/dd/yyyy}", new { @id = "DeliveryDate", @onkeydown = "return false;", @class = "form-control input-rounded" })

                                        </div>
                                        <!-- Div for Recurrence -->
                                        <div class="form-group col-md-6 ShowReccuringType" style="display:none">
                                            <label class="col-form-label" id="lblInvoicingFrequency"> Invoicing Frequency<span class="req">*</span></label>

                                            @Html.TextBoxFor(model => model.InvoicingFrequency, new { @id = "InvoicingFrequency", @onkeydown = "return false;", @style = "background-color:#EBEBE4;", @class = "form-control input-rounded" })

                                        </div>
                                        <div class="form-group col-md-6 ShowReccuringType" style="display:none">
                                            <label class="col-form-label" id="lblCostDuringPeriod">  Cost During Period<span class="req">*</span></label>

                                            @Html.TextBoxFor(model => model.CostDuringPeriod, new { @id = "CostDuringPeriod", @onkeydown = "return false;", @style = "background-color:#EBEBE4;", @class = "form-control input-rounded" })

                                        </div>

                                        <div class="form-group col-md-6 ShowReccuringType" style="display:none">
                                            <label class="col-form-label" id="lblBillDate">Bill Date<span class="req">*</span></label>

                                            @Html.TextBoxFor(model => model.BillDate, "{0:MM/dd/yyyy}", new { @id = "BillDate", @onkeydown = "return false;", @class = "form-control input-rounded" })


                                        </div>



                                        <!--End Div for Recurrence -->
                                        <div class="form-group col-md-6 AdressShowHide">
                                            <label class="col-form-label" id="lblAddress">Address<span class="req">*</span></label>

                                            @Html.TextAreaFor(model => model.PointOfContactAddress, new { @id = "PointOfContactAddress", @readonly = "readonly", @class = "form-control input-rounded" })

                                        </div>


                                        <div class="form-group col-md-6 AdressShowHide">
                                            <label class="col-form-label" id="lblCostDuringPeriod"> PO Document</label>

                                            <div id="dvDocPreview">
                                            </div>

                                            <div class="custom-file">
                                                <input id="fileuploadEmergency" type="file" style="" class="custom-file-input" name="POD_EmergencyPODocumentFile" />
                                                <label class="custom-file-label">Choose file</label>
                                            </div>

                                          
                                            <ul class="attachment">
                                                @if (Model.POD_EmergencyPODocument != null && Model.POD_EmergencyPODocument != "")
                                                {
                                                    <li>
                                                        <a class="title" href="@Url.Content(EMD+Model.POD_EmergencyPODocument)">@Model.POD_EmergencyPODocument</a>
                                                    </li>
                                                }
                                            </ul>
                                            <div class="errorspace">
                                                @Html.ValidationMessageFor(model => model.POD_EmergencyPODocumentFile)
                                            </div>

                                        </div>



                                       








                                        @Html.HiddenFor(model => model.PointOfContactAddressHidden, new { @id = "PointOfContactAddressHidden" })

                                        <div class="form-group col-md-6 IsVendorNotRegister" style="display:none;">
                                            <label class="col-form-label">Vendor Name<span class="req">*</span></label>

                                            @Html.TextBoxFor(model => model.VendorName, new { @id = "VendorName", @class = "form-control input-rounded" })

                                        </div>
                                        <div class="form-group col-md-6 IsVendorNotRegister" style="display:none;">
                                            <label class="col-form-label" id="lblCostDuringPeriod"> Comment<span class="req">*</span></label>

                                            @Html.TextBoxFor(model => model.Comment, new { @id = "Comment", @class = "form-control input-rounded" })

                                        </div>

                                        <div class="form-group col-md-6 IsVendorNotRegister" style="display:none;">
                                            <label class="col-form-label">Ammount<span class="req">*</span></label>

                                            @Html.TextBoxFor(model => model.Amount, new { @id = "Amount", @class = "form-control input-rounded" })

                                        </div>

                                        <div class="form-group col-md-12 IsVendorNotRegister" style="display:none;">
                                            <label class="col-form-label" id="">PO Document<span class="req">*</span></label>

                                            <div id="dvDocPreview">
                                            </div>
                                            <input id="fileuploadEmergency" type="file" style="margin-left:auto;" name="POD_EmergencyPODocumentFile" />
                                            <ul class="attachment">
                                                @if (Model.POD_EmergencyPODocument != null && Model.POD_EmergencyPODocument != "")
                                                {
                                                    <li style="margin-left :25%;margin-top:20px;">
                                                        <a class="title" href="@Url.Content(EMD+Model.POD_EmergencyPODocument)">@Model.POD_EmergencyPODocument</a>
                                                    </li>
                                                }
                                            </ul>
                                            <div class="errorspace">
                                                @Html.ValidationMessageFor(model => model.POD_EmergencyPODocumentFile)
                                            </div>

                                        </div>


                                        <div class="form-group col-md-6 EmergencyQuestionsInjured" style="display:none;">
                                            <h6 class="col-form-label">Q.1) Is Someone Injured or Life Endangered ?<span class="req">*</span></h6>
                                            <span>
                                                <input type="radio" id='IsInjuredYes' value="Y" name="IsInjured" class="IsVendorRegister" /><span class="radio_span">Yes</span>
                                                <input type="radio" id='IsInjuredNo' value="N" name="IsInjured" class="IsVendorRegister" /><span class="radio_span">NO</span>
                                            </span>

                                        </div>

                                        <div class="form-group col-md-6 EmergencyQuestionsContinues" style="display:none;">
                                            <h6 class="col-form-label">Q.2) Is continuation of operation and low contractual obligation ?<span class="req">*</span></h6>

                                            <span>
                                                <input type="radio" id='IscontinuationYes' value="Y" name="Iscontinuation" class="IsVendorRegister" /><span class="radio_span">Yes</span>
                                                <input type="radio" id='IscontinuationNo' value="N" name="Iscontinuation" class="IsVendorRegister" /><span class="radio_span">No</span>
                                            </span>
                                        </div>

                                        <div class="form-group col-md-6 EmergencyQuestionsBill" style="display:none;">
                                            <h6 class="col-form-label">Q.3) Vendor Requesting pay immediately ?<span class="req">*</span></h6>
                                            <span>
                                                <input type="radio" id='IsVendorRequestYes' value="Y" name="IsVendorRequest" class="IsVendorRegister" /><span class="radio_span">Yes</span>
                                                <input type="radio" id='IsVendorRequestNo' value="N" name="IsVendorRequest" class="IsVendorRegister" /><span class="radio_span">No</span>
                                            </span>
                                        </div>

                                        <div class="form-group col-md-6 EmergencyQuestionsBill" style="display:none;">
                                            <h6 class="col-form-label"> Q.4) Vendor willing to bill ?<span class="req">*</span></h6>
                                            <span>
                                                <input type="radio" id='IsVendorbillYes' value="Y" name="IsVendorwillingToBill" class="IsVendorRegister" /><span class="radio_span">Yes</span>
                                                <input type="radio" id='IsVendorbillNo' value="N" name="IsVendorwillingToBill" class="IsVendorRegister" /><span class="radio_span">No</span>
                                            </span>

                                        </div>

                                    </div>
                                        <div>
                                            @if (ViewBag.UpdateMode != null && ViewBag.UpdateMode == true)
                                            {
                                                <div class="" style="margin-bottom: 40px;">
                                                    <div id="jqGrid_container">
                                                        <div class="" style="margin-bottom: 40px;">
                                                            <div id="jqGrid_container">
                                                                <div class="row">
                                                                    <div class="col-lg-12">
                                                                        <div class="card aos-init" data-aos="fade-up">
                                                                            <div class="card-header" style="height: 45px;">
                                                                                <div class="card-header headerSize" style="height:45px; padding:0;">
                                                                                    <div class="form-group mb-0">
                                                                                        <div class="row">

                                                                                            <div class="col-md-5">
                                                                                                <input id="" class="inputSearch form-control input-rounded" placeholder="" mtype="text">
                                                                                            </div>

                                                                                        </div>

                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="card-body">
                                                                                <table id="tbl_CompanyFacilityDataEditList" class="jsgrid"></table>
                                                                            </div>

                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                @*<table id="tbl_CompanyFacilityDataList" border="0" cellpadding="0" cellspacing="0"></table>
                                <div id="divCompanyFacilityListPager"></div>*@
                                                            </div>
                                                        </div>









                                                        @*<table id="" border="0" cellpadding="0" cellspacing="0"></table>
                        <div id="divCompanyFacilityEditListPager"></div>*@
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="gridShowHide" style="margin-bottom: 40px;display:none" id="divheaderforPo">
                                                    <div id="jqGrid_container">
                                                        <div class="row">
                                                            <div class="col-lg-12">
                                                                <div class="card aos-init" data-aos="fade-up">
                                                                    
                                                                        <div class="card-header headerSize">
                                                                            <div class="form-group mb-0">
                                                                                <div class="row">

                                                                                    <div class="col-md-5">
                                                                                        <input id="" class="inputSearch form-control input-rounded" placeholder="" style="width: 260px;" type="text">
                                                                                    </div>

                                                                                </div>

                                                                            </div>
                                                                        </div>
                                                                   
                                                                    <div class="card-body">
                                                                        <table id="tbl_CompanyFacilityDataList" class="jsgrid" style="position: relative; height: 400px; width: 100%;"></table>
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        </div>
                                                        @*<table id="tbl_CompanyFacilityDataList" border="0" cellpadding="0" cellspacing="0"></table>
                        <div id="divCompanyFacilityListPager"></div>*@
                                                    </div>
                                                </div>
                                            }
                                            <!---End Div for Emergency PO-->
                                            @if (ViewBag.UpdateMode != null && ViewBag.UpdateMode == true)
                                            {
                                                <span class="w-100 text-right float-left">
                                                    <button type="submit" class="btn btn-default bluebutton nxt-btn" id="btnSaveVehicle" value="EditPO" style="background-color:forestgreen;border-radius:18px;margin-left: 20px;width:160px;color:white; ">Update</button>
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="w-100 text-right float-left">
                                                    <button type="submit" class="btn btn-primary btn-rounded bluebutton"  value="ApprovePO" id="btnApprovePO">Send For Approval</button>
                                                    <button type="submit" class="btn btn-success btn-rounded bluebutton" value="SavePO" id="btnSavePO">Save</button>
                                                </span>
                                            }

                                        </div>


                                    </div>
                                <div class="marbottom"></div>
                                <div class="clearfix"></div>
                            </div>



                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
 

    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
        $("#lblLocation").hide();
        $("#lblPOType").hide();
        $("#lblVendor").hide();
        $('.drpLocation').hide();
        if(update == 'True')
        {
           
            $("#SelectedVendor").val('@ViewBag.Vendor');
             $("#Vendor").val('@ViewBag.Vendor');
            $("#POType").val(@ViewBag.POTypeDate);
            $('input[type="text]"').attr('readonly','readonly');; // mark it as read only
            $("#Location,#POType,#SelectedVendor").attr("disabled", true);
            $('input[type="text"]').css('background-color', '#DEDEDE')
            $("#Location,#POType, #SelectedVendor, #PointOfContactAddress").css('background-color', '#DEDEDE')
            $('#Vendor').find('option[value="@ViewBag.Vendor"]').attr('selected','selected')
            $("#Vendor").val(@ViewBag.Vendor);
            $("#lblVendor").addClass('active highlight');
            $("#lblVendor,#lblLocation,#lblPOType").show();
            $('#lblIssueDate,#lblVendor,#lblLocation,#lblPOType,#lblPointOfContact,#lblDeliveryDate,#lblInvoicingFrequency,#lblCostDuringPeriod,#lblBillDate,#lblAddress,label').addClass('active highlight');
            if ($("#POType").val() == 1)
            {
                $(".ShowRowForEmergency").hide();
                $(".ShowReccuringType, .EmergencyQuestions, .EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".ShowNormalPO, .AdressShowHide, .WhenVenderRegister").show();
                $(".brs").hide();
                $(".IsVendorNotRegister, .gridShowHide, .ShowAttachment").hide();
                $('#IsReccuringAddedForVendor').hide();
                IsRecuring = false;
                getVendorList(IsRecuring);
            }

            if($("#POType").val() == 2)
            {
                $(".ShowReccuringType ,.AdressShowHide, .WhenVenderRegister").show();
                $(".ShowRowForEmergency, .EmergencyQuestions").hide();
                $(".IsVendorNotRegister").hide();
                $('#IsReccuringAddedForVendor').hide();
                $(".ShowNormalPO,.gridShowHide").hide();
                $(".EmergencyQuestions, .EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".brs").hide();
                $(".IsVendorNotRegister, .ShowAttachment").hide();
                IsRecuring = true;
                getVendorList(IsRecuring);
            }
            if ($("#POType").val() == 3)
            {
                $(".ShowReccuringType, .EmergencyQuestions,.EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".ShowNormalPO,.AdressShowHide, .WhenVenderRegister").hide();
                $(".ShowRowForEmergency").show();
                $(".brs").hide();
                // $(".ShowReccuringType").hide();
                $(".IsVendorNotRegister,.gridShowHide").hide();
                $('#IsReccuringAddedForVendor, .ShowAttachment').hide();
                IsRecuring = false;
                getVendorList(IsRecuring);
            }
            if ($("#POType").val() == 4) {
                $(".ShowRowForEmergency").hide();
                $(".ShowReccuringType, .EmergencyQuestions, .EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".ShowNormalPO, .AdressShowHide, .WhenVenderRegister").show();
                $(".brs").hide();
                $(".IsVendorNotRegister, .gridShowHide, .ShowAttachment").hide();
                $('#IsReccuringAddedForVendor').hide();
                IsRecuring = false;
                getVendorList(IsRecuring);
            }
            @*$("#SelectedVendor").val(@ViewBag.Vendor);*@
        }
        $('#DeliveryDate, #BillDate').datepicker({
            format: "mm/dd/yyyy",
            startDate: new Date()
        });
        var now = new Date();
        var date = ((now.getMonth() + 1) + '/' + (now.getDate()) + '/' + now.getFullYear());
        $('#IssueDate').val(date);
        $('#lblIssueDate').addClass('active highlight');
        $("#Location").on("click", function () {
            var $thisadr2st = $(this),
                 label = $thisadr2st.prev('label');
            label.addClass('active highlight');
            $("#lblLocation").show();
        })
        $("#POType").on("click", function () {
            var $thisadr2st = $(this),
                 label = $thisadr2st.prev('label');
            label.addClass('active highlight');
            $("#lblPOType").show();
        })
        $("#Vendor").on("click", function () {
            var $thisadr2st = $(this),
                 label = $thisadr2st.prev('label');
            label.addClass('active highlight');
            $("#lblVendor").show();
        })

        $("#POType").change(function () {
            var IsRecuring = false;
            if ($("#POType").val() == 1)
            {
                $(".ShowRowForEmergency").hide();
                $(".ShowReccuringType, .EmergencyQuestions, .EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".ShowNormalPO, .AdressShowHide, .WhenVenderRegister").show();
                $(".brs").hide();
                $(".IsVendorNotRegister, .gridShowHide, .ShowAttachment").hide();
                $('#IsReccuringAddedForVendor').hide();
                IsRecuring = false;
                getVendorList(IsRecuring);
            }

            if($("#POType").val() == 2)
            {
                $(".ShowReccuringType ,.AdressShowHide, .WhenVenderRegister").show();
                $(".ShowRowForEmergency, .EmergencyQuestions").hide();
                $(".IsVendorNotRegister").hide();
                $('#IsReccuringAddedForVendor').hide();
                $(".ShowNormalPO,.gridShowHide").hide();
                $(".EmergencyQuestions, .EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".brs").hide();
                $(".IsVendorNotRegister, .ShowAttachment").hide();
                //$('select#Vendor').find('option').each(function () {
                //    debugger
                //    $("#Vendor").html("");
                //    $("#Vendor").append
                //    ($('<option></option>').val(null).html("---Select Vendor---"));
                //    if ($(this).val() != "") {
                //        if ($(this).attr('IsRecorring').val() != null && $(this).attr('IsRecorring').val() != "") {
                //            $("#Vendor").append('<option value=' + $(this).val() + 'IsRecorring' + $(this).attr('IsRecorring').val() + '>' + $(this).text() + '</option>');
                //        }
                //    }
                //});
                IsRecuring = true;
                getVendorList(IsRecuring);
            }
            if ($("#POType").val() == 3)
            {
                $(".ShowReccuringType, .EmergencyQuestions,.EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".ShowNormalPO,.AdressShowHide, .WhenVenderRegister").hide();
                $(".ShowRowForEmergency").show();
                $(".brs").show();
               // $(".ShowReccuringType").hide();
                $(".IsVendorNotRegister,.gridShowHide").hide();
                $('#IsReccuringAddedForVendor, .ShowAttachment').hide();
                IsRecuring = false;
                getVendorList(IsRecuring);
            }
            if ($("#POType").val() == 4) {
                $(".ShowRowForEmergency").hide();
                $(".ShowReccuringType, .EmergencyQuestions, .EmergencyQuestionsInjured, .EmergencyQuestionsContinues, .EmergencyQuestionsBill").hide();
                $(".ShowNormalPO, .AdressShowHide, .WhenVenderRegister").show();
                $(".brs").hide();
                $(".IsVendorNotRegister, .gridShowHide, .ShowAttachment").hide();
                $('#IsReccuringAddedForVendor').hide();
                IsRecuring = false;
                getVendorList(IsRecuring);
            }
        })
        $("input[type='radio']").change(function () {
            if ($(this).val() == 1) {
                $(".WhenVenderRegister, .AdressShowHide, .ShowAttachment").show();
                $(".EmergencyQuestions").show();
                $(".EmergencyQuestionsInjured").show();
                $(".brs").show();
                $(".IsVendorNotRegister").hide();
                $(".ShowReccuringType").hide()
            }
            else if($(this).val() == 0){
                $(".WhenVenderRegister, .AdressShowHide").hide();
                $(".EmergencyQuestions").hide();
                $(" .EmergencyQuestionsInjured,.IsVendorNotRegister,.ShowAttachment").show();
                $(".ShowReccuringType, .gridShowHide").hide();
            }
            else if ($(this).val() == "N" && $(this).attr('id') == "IsInjuredNo") //$("div").attr("id")
            {
                $(".EmergencyQuestionsContinues").show();
                $(".EmergencyQuestionsBill").hide();
            }
            else if ($(this).val() == "N" && $(this).attr('id') == "IscontinuationNo") {
                $(".EmergencyQuestionsVendorRequest").show();
                $(".EmergencyQuestionsBill").hide();
                bootbox.dialog({
                    message: "This is not Emeegency PO please fill Normal PO",
                    buttons: {
                        cancel: {
                            label: "Cancel",
                            className: "btn-default pull-right"
                        }
                    },
                    danger: {
                        label: "cancel",
                        classname: "btn btn-primary",
                        callback: function () {
                        }
                    }
                });
            }
            else if ($(this).val() == "Y" && $(this).attr('id') == "IsInjuredYes") {
                $(".EmergencyQuestionsBill").show();
                $(".EmergencyQuestionsContinues").hide();
            }
            else if ($(this).val() == "Y" && $(this).attr('id') == "IscontinuationYes") {
                $(".EmergencyQuestionsBill").show();
                $(".EmergencyQuestionsVendorRequest").hide();
            }
        });
        //$(function () {
        //    $("#fileuploadEmergency").change(function () {
        //        $("#dvDocPreview").html("");
        //        var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.pdf|.doc|.txt|.jpg|.JPG|.PNG|.png|.JPEG|.jpeg)$/;
        //        if (regex.test($(this).val().toLowerCase())) {
        //            if ($.browser.msie && parseFloat(jQuery.browser.version) <= 9.0) {
        //                $("#dvDocPreview").show();
        //                $("#dvDocPreview")[0].filters.item("DXImageTransform.Microsoft.AlphaImageLoader").src = $(this).val();
        //            }
        //            else {
        //                if (typeof (FileReader) != "undefined") {
        //                    $("#dvDocPreview").show();
        //                    //$("#dvDocPreview").append("<img />");
        //                    var reader = new FileReader();
        //                    reader.onload = function (e) {
        //                        $("#dvDocPreview").attr("src", e.target.result);
        //                    }
        //                    reader.readAsDataURL($(this)[0].files[0]);
        //                } else {
        //                    alert("This browser does not support FileReader.");
        //                }
        //            }
        //        }
        //    });
        //});
    })
    </script>
<script>
        $('#po_form').on("click", ":submit", function(){
            //$('#po_form').submit(function (event) {
            //e.preventDefault();
            var formData = new FormData();
            var totalFiles = document.getElementById("fileuploadEmergency").files.length;
            var file = document.getElementById("fileuploadEmergency").files[0];
            formData.append("FileUpload", file);

        if ($("#po_form").valid())
        { 
            var obj = new Object();
            var QuestionAnswer = [];
            obj.PONumber = $("#PONumber").val(); obj.Location = $("#Location option:selected").val();
            obj.POType = $("#POType").val(); obj.IsVendorRegister = $("input[type='radio'][name='IsVendorRegister']:checked").val();
            if (update == 'True')
            {
                obj.Vendor = $('#SelectedVendor').find('option:selected').val();
            }
            else {
                obj.Vendor = $("#Vendor option:selected").val();
            }
                obj.PointOfContactName = $("#PointOfContactName").val();
            obj.IssueDate = $("#IssueDate").val(); obj.DeliveryDate = $("#DeliveryDate").val();
            obj.InvoicingFrequency = $("#InvoicingFrequency").val(); obj.CostDuringPeriod = $("#CostDuringPeriod").val();
            obj.BillDate = $("#BillDate").val(); obj.PointOfContactAddress = $("#PointOfContactAddress").val();
            obj.VendorName = $("#VendorName").val(); obj.Comment = $("#Comment").val(); obj.Amount = $("#Amount").val();
            obj.IsInjured = $("input[type='radio'][name='IsInjured']:checked").val();
            obj.Iscontinuation = $("input[type='radio'][name='Iscontinuation']:checked").val();
            obj.IsVendorRequest = $("input[type='radio'][name='IsVendorRequest']:checked").val();
            obj.IsVendorwillingToBill = $("input[type='radio'][name='IsVendorwillingToBill']:checked").val();
            obj.IssueDate = $("#IssueDateEdit").val();
            obj.POD_EmergencyPODocumentFile = $('#fileuploadEmergency')[0].files[0];
            obj.POStatus = $(this).val();
            if (obj.IsInjured != null)
            {
                QuestionAnswer.push({ 'QuestionId': 2, 'Answer': obj.IsInjured });
            }
            if (obj.Iscontinuation == "Y")
            {
                QuestionAnswer.push({ 'QuestionId': 3, 'Answer': obj.Iscontinuation });
            }
            QuestionAnswer.push({ 'QuestionId': 4, 'Answer': obj.IsVendorRequest });
            QuestionAnswer.push({ 'QuestionId': 5, 'Answer': obj.IsVendorwillingToBill });
            var Total; var GridData;
            if (update == 'True')
            {
                  var grid = $("#tbl_CompanyFacilityDataEditList").data("JSGrid");
                obj.POId = $('#POId').val();
                // obj.Total = $("#tbl_CompanyFacilityDataEditList").jqGrid('getCol', 'TotalPrice', false, 'sum');
                var _total = 0;
                GridData = grid.data;
                var Allsum = grid.data.map(function (v) {

                    return _total += v.Total===null?0: v.Total;
                   
                });
                obj.Total = Allsum;
            }
            else
            {
                var grid = $("#tbl_CompanyFacilityDataList").data("JSGrid");
                var _total = 0;
                GridData = grid.data;
                var Allsum = grid.data.map(function (v) {

                    return _total += v.Total===null?0: v.Total;
                   
                });
                obj.Total = Allsum;
                 
            }
            if (update == 'True') {
                var tt = obj.PONumber.split("O").pop();
                obj.POId = parseInt(tt);
            }

            //To save File doc of PO to folder and get name of file to save to database
            var img = $("#fileuploadEmergency").val();
            @*if (img == "" || img == undefined || img == null) {
                obj.POD_EmergencyPODocumentFile = "";
            }
            else {
                var ImageFile;
                file_data = $("#fileuploadEmergency").prop("files")[0]; // Getting the properties of file from file field
                form_data = new FormData(); // Creating object of FormData class
                form_data.append("file", file_data) // Appending parameter named file with properties of file_field to form_data
                form_data.append("CallID", 11) // Adding extra parameters to form_data
                if (file_data != undefined) {
                    $.ajax({
                        url: '@Url.Action("UploadedImagePO", "POTypeData")',
                        dataType: 'script',
                        cache: false,
                        contentType: false,
                        processData: false,
                        async: false,
                        beforeSend: function () {
                            new fn_showMaskloader('Please wait...');
                        },
                        data: form_data, // Setting the data attribute of ajax with file_data
                        type: 'POST',
                        success: function (data) {
                            obj.POD_EmergencyPODocumentFile = data;
                            // return data;

                        },
                        error: function (e) { alert("error:" + e); },
                        complete: function () {
                            fn_hideMaskloader();

                        }
                    });
                }
            }*@

            var SaveUrl = 'POTypeData/SavePOTypeDetails/';
            $.ajax({
            url: $_HostPrefix + SaveUrl,
            type: 'POST',
            datatype: 'application/json',
            contentType:  'application/json',

                //data:JSON.stringify(formData),
            data: JSON.stringify({ objPOTypeDataModel: obj, obj: GridData, objQuestioAsnwerList: QuestionAnswer }),
            //data: { "onjFormData": values, "obj":GridData },
            beforeSend: function () {
              new fn_showMaskloader('Please wait...');
            },
                success: function (result) {
                 
                var listUrl = 'POTypeData/AllPOList';
                if (result == "This PO is self approved by you successfully.")
                {
                    bootbox.dialog({
                        message: result,
                        buttons: {
                            cancel: {
                                label: "Cancel",
                                className: "btn-default pull-right"
                            }
                        },
                        danger: {
                            label: "cancel",
                            classname: "btn btn-primary",
                            callback: function () {
                            }
                        }
                    });
                }
                else
                {
                    toastr.success("PO data saved successfully.");
                }

                window.location.href = $_HostPrefix + listUrl;
                },
            error: function () { },
            complete: function () {
                 fn_hideMaskloader();
                 window.location.href = $_HostPrefix + listUrl;
               }
            });

            return true
            window.location.href = $_HostPrefix + listUrl;
            }
        else
        {
            return false;
        }
        });

</script>

<script src="~/Scripts/eFleetVehicle/reg.js"></script>
<script src="~/GridListing/JqGridScript/ListCompanyFacility.js"></script>
 <script src="~/GridListing/JqGridScript/ListCompanyFacilityForEdit.js"></script> 