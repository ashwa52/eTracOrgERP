@model WorkOrderEMS.Models.AddChartModel
@{
    ViewBag.Title = "Admin Dashboard";
    //Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
    Layout = null;
    string eTracScriptVersion = System.Configuration.ConfigurationManager.AppSettings["eTracScriptVersion"];
    string loginUserName = "", loginUserEmail = "", loginUserContactNo = "", loginUserProfile = "";
    long loginUserType = 0;
    WorkOrderEMS.Models.eTracLoginModel ObjLogin = (WorkOrderEMS.Models.eTracLoginModel)Session["eTrac"];
    long viewallloc = (Convert.ToInt64(Session["eTrac_SelectedDasboardLocationID"]));
    string imgPath = (Convert.ToString(Session["eTrac_ProfileImage"]));
    long locationId = 0;
    string hostingPrefix = System.Configuration.ConfigurationManager.AppSettings["hostingPrefix"];
    long i = 1;
    if (ObjLogin != null)
    {
        loginUserName = ObjLogin.FName + "'s";
        loginUserEmail = ObjLogin.Email;
        loginUserProfile = ObjLogin.UserProfile;
        loginUserType = ObjLogin.UserRoleId;
        //loginUserContactNo = ObjLogin.ContactNo;
        locationId = ObjLogin.LocationID;
    }
}
<style>
    .addColorPlusMinus {
        color: #0aa0cd;
    }
</style>
@*<script src="~/Scripts/jquery-3.2.1.min.js"></script>*@
<link href="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.2/summernote.css" rel="stylesheet">
<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.2/summernote.js"> </script>

<!--Start Modals-->
<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-hidden="true" id="myModalForChart">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Vehicle Seating Chart </h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="divDetailPreview" class="">
                    <div class="row">
                        <div class="" id="DivContractDetailsIndex">
                            <form id="SaveVCSChartForm">
                                @Html.HiddenFor(model => model.JobDesc)
                                @Html.HiddenFor(model => model.parentId)
                                <div class="basic-form" style="margin-right: 40px;">
                                    <div class="form-group row">
                                        @*@Html.LabelFor(model => model.SeatingName, new { @class = "col-sm-2 col-form-label" })*@
                                        <div class="col-sm-6">
                                            @Html.TextBoxFor(model => model.SeatingName, new { @Placeholder = "Seating Name", @id = "SeatingName", @class = "form-control input-rounded required isValidLocationName" })
                                        </div>
                                        @*@Html.LabelFor(model => model.Superior, new { @class = "col-sm-2 col-form-label" })*@
                                        <div class="col-sm-6">
                                            <select id="Superior" name="Superior" class="form-control input-rounded requiredselect"><option value="-1">--Select Superiour--</option></select>
                                            @*@Html.DropDownListFor(model => model.Superior, new SelectList(ViewBag.SuperiourList, "ParentId", "SeatingName"), "--Select Superior--", new { @class = "form-control input-rounded required requiredselect", @id = "Superior" })*@
                                            <span id="SeatingSpan" style="display:none"><p>This is your first Vehicle Seating Chart</p></span>

                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @*@Html.LabelFor(model => model.Department, new { @class = "col-sm-2 col-form-label" })*@
                                        <div class="col-sm-12">

                                            <select id="Department" name="Department" class="form-control input-rounded requiredselect"><option value="-1">--Select Superiour--</option></select>
                                            @*@Html.DropDownListFor(model => model.Department, new SelectList(ViewBag.DepartmentList, "DeptId", "DepartmentName"), "Department", new { @class = "form-control input-rounded required requiredselect", @id = "Department" })*@
                                            @*@Html.TextBoxFor(model => model.Department, new { @Placeholder = "Seating Name", @class = "form-control input-rounded required isValidLocationName" })*@

                                        </div>
                                    </div>
                                    <div class="form-group row">

                                        @*@Html.LabelFor(model => model.JobDescription, new { @class = "col-sm-2 col-form-label" })*@
                                        <div class="col-sm-11">
                                            @Html.TextBoxFor(model => model.JobDescription, new { @Placeholder = "Job Description", @id = "JobDescription", @class = "form-control input-rounded required isValidLocationName" })
                                        </div>
                                        <a class="addrows col-sm-1"><i class="fa fa-plus-circle fa-2x addColorPlusMinus" style="cursor:pointer;" aria-hidden="true"></i></a>
                                    </div>
                                    <span id="routeDiv">
                                    </span>
                                    <div class="form-group row">
                                        @*@Html.LabelFor(model => model.RolesAndResponsibility, new { @class = "col-sm-2 col-form-label" })*@
                                        @Html.TextAreaFor(model => model.RolesAndResponsibility, new { rows = "20", style = "resize:none;width:400px;", placeholder = Html.DisplayNameFor(model => model.RolesAndResponsibility), @id = "RolesAndResponsibility", @class = "form-control input-rounded required textarea-editor" })
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <br />
                <br />
                <div>
                    <button type="button" class="btn btn-success pull-left" id="ViewVSC" style="border-radius:100px;">View Chart</button>
                    <button type="button" class="btn btn-secondary pull-right" id="closeVSC" style="border-radius:100px;" data-dismiss="modal">Close</button>
                    <input type="button" class="btn btn-primary pull-right" id="SaveVSC" style="border-radius:100px;margin-right: 10px;" value="Save" />
                </div>
            </div>
        </div>
        @*<div class="modal-footer" style="background: white;">
                <button type="button" class="btn btn-success pull-left" id="ViewVSC" style="border-radius:100px;">View Chart</button>
                <button type="button" class="btn btn-secondary" id="closeVSC" style="border-radius:100px;" data-dismiss="modal">Close</button>
                <input type="button" class="btn btn-primary" id="SaveVSC" style="border-radius:100px;" value="Save" />
            </div>*@
    </div>
</div>

<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-hidden="true" id="myModalForAddingJobTitle">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Job Title </h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="divDetailPreview">
                    <div class="row">
                        <div class="" id="DivContractDetailsIndex">
                            <form id="SaveJobTitleForm">
                                @Html.HiddenFor(model => model.JobTitleDesc)
                                @Html.HiddenFor(model => model.JobTitleId, new { @id = "JobTitleId" })
                                @Html.HiddenFor(model => model.parentId, new { @id = "parentIdForJobTitle" })
                                <div class="basic-form" style="margin-right: 40px;">
                                    <span id="addJobTitleLabel">
                                    </span>
                                    <div class="form-group row">
                                        <div class="col-sm-10">
                                            @Html.TextBoxFor(model => model.JobTitle, new { @Placeholder = "Job Title", @id = "JobTitle", @style = "width: 600px;", @class = "form-control input-rounded required isValidLocationName" })
                                        </div>
                                        <a class="addjobtitlerows col-sm-1"><i class="fa fa-plus-circle fa-2x addColorPlusMinus" style="cursor:pointer;margin-left:30px;" aria-hidden="true"></i></a>
                                    </div>
                                    <span id="jobTitleDiv">
                                    </span>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>                
                <br />
                <br />
                <div>
                    <button type="button" class="btn btn-secondary pull-right" id="closeJobTitle" style="border-radius:100px;" data-dismiss="modal">Close</button>
                    <input type="button" class="btn btn-primary pull-right" id="SaveJobTitle" style="border-radius:100px;margin-right: 10px;" value="Save" />
                </div>
            </div>
        </div>
    </div>
</div>

<!--End of Modals-->
<!--Use Text tool for Roles and responsibility-->
@*<script src="~/Content/NewAdminContent/JQUERY/tinymce.min.js"></script>*@
<script type="text/javascript" src="//tinymce.cachefly.net/4.0/tinymce.min.js"></script>
<script type="text/javascript">
    tinymce.init({
        selector: 'textarea', width: 730,height:300, setup: function (editor) {
            editor.on('change', function () {
                tinymce.triggerSave();
            })
        }
    });
    // https://www.aspsnippets.com/Articles/Rich-Text-Editor-WYSIWYG-Editor-in-ASPNet-MVC-5.aspx
    $(document).ready(function () {

        $("#SeatingName").keyup(function () {
            var dropdownval = $('#Superior > option').length;
            if (dropdownval == 1) {
                $("#ParentId").val(0);
                $("#SeatingSpan").show();
            }
            else {
                $("#SeatingSpan").hide();
            }
        })
        $('#Superior').change(function (e) {
            var valId =  $(this).find('option:selected').val();
            $("#Superior").val(valId);
        })

        $(".deletedata").click(function () {
            var jobId = this.attr("jobtitleid");
            var valId = $(this).find('option:selected').val();
            $.ajax({
                type: "POST",
                url: '../AdminSection/AdminDashboard/DeleteJobTitleById?JobTitleId=' + jobId, //'@Url.Action("SaveVCS", "AdminDashboard", new { area = "AdminSection" })',
                success: function (Data) {
                    if (Data != null) {
                        $("#addJobTitleLabel").html("");
                        $("#JobTitleId").val("");
                        if (Data.JobTitleLabel != null) {
                            $("#JobTitleId").val(Data.Id);
                            var nameArr = Data.JobTitleLabel.split('|');
                            for (var splited = 0; splited < nameArr.length; splited++) {
                                if (nameArr[splited] != " " && nameArr[splited] != "") {
                                    var divID = $('#addJobTitleLabel div.dymanicDelete').length;
                                    $('#addJobTitleLabel').append('<div class="form-group row dymanicDelete d_' + splited + '"><div class="col-sm-10 getJobTitleData"><label class="col-sm-2 col-form-label">' + nameArr[splited] + '</label></div><div class="col-sm-1"><a class="addjobtitleDeleterows" id=d' + splited + ' jobtitleid =' + Data.Id + '><i class="fa fa-trash addColorTrash fa-2x" style="cursor:pointer;margin-left: 30px;color:#cd0a2499;" aria-hidden="true"></i></a></div></div>');
                                }
                            }
                        }
                    }
                    $("#myModalForAddingJobTitle").modal('show');
                    $("#parentIdForJobTitle").val(c);
                },
                error: function (err) {
                }
            });

        });
        //function GetDropdownForChar() {
        //    $.ajax({
        //        type: "GET",
        //        url: "../AdminSection/AdminDashboard/GetList",
        //        success: function (data) {
        //            debugger
        //            if (data != null) {

        //                $('#Department').html('');
        //                $('#Superior').html('');
        //                var optionsSuperior = '';
        //                var optionsDepartment = '';
        //                optionsSuperior += '<option value="0">-Select Superior--</option>';
        //                optionsDepartment += '<option value="0">-Select Department--</option>';
        //                for (var i = 0; i < data.listSuperiour.length; i++) {
        //                    debugger
        //                    optionsSuperior += '<option value="' + data.listSuperiour[i].parentId + '">' + data.listSuperiour[i].SeatingName + '</option>';
        //                }
        //                for (var i = 0; i < data.listDepartment.length; i++) {
        //                    debugger
        //                    optionsDepartment += '<option value="' + data.listDepartment[i].DeptId + '">' + data.listDepartment[i].DepartmentName + '</option>';
        //                }
        //                $('#Superior').append(optionsSuperior);
        //                $('#Department').append(optionsDepartment);
        //            }
        //        }
        //    })
        //}
    });
</script>

